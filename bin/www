(function() {

  'use strict';

  const app = require('./app');
  const debug = require('debug')('herman-express:server');
  const http = require('http');

  const port = normalizePort(process.env.PORT || '3000');
  app.set('port', port);

  const server = http.createServer(app);

  server.listen(port);
  server.on('error', onError);
  server.on('listening', onListening);

  function normalizePort(val) {
    const port = parseInt(val, 10);
    if (isNaN(port)) {
      return val;
    }
    if (port >= 0) {
      return port;
    }
    return false;
  }

  function onError(error) {
    if (error.syscall !== 'listen') {
      throw error;
    }
    const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
    switch (error.code) {
      case 'EACCES':
        console.error(bind + ' requires elevated privileges');
        process.exit(1);
        break;
      case 'EADDRINUSE':
        console.error(bind + ' is already in use');
        process.exit(1);
        break;
      default:
        throw error;
    }
  }

  function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    debug('Listening on ' + bind);
  }

}());


const path = require('path');
const express = require('express');
const app = express();
// require('dotenv').config();

const   bodyParser = require('body-parser'),
        cookieParser = require('cookie-parser'),
        favicon = require('serve-favicon');

// Run the app by serving the static files
// in the dist directory

app.use(favicon(path.join(__dirname, '../public', 'favicon.ico')));

app.use(express.static(__dirname + '/../public'));

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

app.use(cookieParser());

// app.get('/env', function(req, res) {
//  const { AUTH0_CLIENT_ID, AUTH0_DOMAIN } = process.env;
//  if (!AUTH0_CLIENT_ID && !AUTH0_DOMAIN) {
//    return res.status(400).json({ message: 'No env set.' });
//  }
//  res.json({ AUTH0_CLIENT_ID, AUTH0_DOMAIN });
// });

// For all GET requests, send back index.html
// so that PathLocationStrategy can be used
app.get('*', function(req, res) {
  res.sendFile(path.join(__dirname + '/../public/index.html'));
});

// Start the app by listening on the default
// Heroku port
app.listen(process.env.PORT || 3000);